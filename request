#!/bin/bash 
. constants.env
echo -e "\nsame IP make reqeust to the same endpoint and HTTP method more than 5 times continously : " >> output.txt
# storing all the ip addresses from the file
ip=`cut -d- -f1 $logs`
# storing all the requests  from the file
request=`cut -d" " -f6 $logs | cut -c2-`
# storing all the endpoints  from the file
endpoint=`cut -d" " -f7 $logs`
# storing all the timestamps from the file
timestamp=`cut -d" " -f4 $logs| cut -c2-`

# declaring  array to store ip_addresses, requests, endpoints, timestamps
declare -a ip_addresses=()
declare -a requests=()
declare -a endpoints=()
declare -a timestamps=()

# function to store all ip addresses, requests, endpoints, timestamps to array
function array_values()
{   count=0
    msg=$1
    for i in $@
    do 
    if [[ $msg = "1" ]]; then
    ip_addresses[${count}]=$i 
    let count++ 
    elif [[ $msg = "2" ]]; then
    requests[${count}]=$i 
    let count++ 
    elif [[ $msg = "3" ]]; then
    endpoints[${count}]=$i 
    let count++ 
    elif [[ $msg = "4" ]]; then
    timestamps[${count}]=$i 
    let count++ 
    fi 
    done
}    

array_values "1" $ip 
array_values "2" $request
array_values "3" $endpoint
array_values "4" $timestamp

# looping through the array to check IP make reqeust to the same endpoint and HTTP method more than 5 times continously and storing the output
count=0
for ((i=1,j=1,k=1,l=1;i<${#ip_addresses[@]},j<${#requests[@]},k<${#endpoints[@]},l<${#timestamps[@]};i++,j++,k++,l++))
do
if [[ ${ip_addresses[$i]} = ${ip_addresses[$((i+1))]} ]] && [[ ${requests[$j]} = ${requests[$((j+1))]} ]] && [[ ${endpoints[$k]} = ${endpoints[$((k+1))]} ]]
then
let count++ 
ipAddress=${ip_addresses[$((i-1))]}
start=${timestamps[$((i-count+1))]}
end=${timestamps[$((i+1))]}
else
l=$((count+1))
count=0
if [[ $l -ge 5 ]]
then 
    echo  $l $ipAddress $start $end >> output.txt
fi
fi
done
